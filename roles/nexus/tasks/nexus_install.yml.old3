---
  - name: install wget
    yum: 
      pkg: 'wget' 
      state: installed

  - name: install jdk 8
    yum: 
      pkg: 'java-1.8.0-openjdk' 
      state: installed

  - name: create "nexus" group
    group: 
      name: nexus 

  - name: create "nexus" user
    user: 
      name: nexus 
      group: nexus 

  - name: download nexu-s
    get_url: 
      url: "{{nexus_download_url}}"
      dest: "{{nexus_download_dest}}"
    register: nexus_download

  - name: create {{nexus_extracted_dir}} directory
    become: yes    
    file: 
      path: "{{nexus_extracted_dir}}"
      state: directory
    when: nexus_download.changed

  - name: extract nexus to {{nexus_extracted_dir}}
    become: yes
    command: tar xzf {{nexus_download_dest}} -C {{nexus_extracted_dir}} --strip-components=1
    when: nexus_download.changed

  - name: move nexus to {{nexus_dir}} directory
    become: yes
    command: cp -a "{{nexus_extracted_dir}}/." "{{nexus_dir}}"
    when: nexus_download.changed

  - name: remove {{nexus_extracted_dir}} directory
    become: yes
    command: rm -rf "{{nexus_extracted_dir}}"
    when: nexus_download.changed

  - name: make {{nexus_dir}} directory property of "nexus" user/group
    file: 
      path: "{{nexus_dir}}"
      group: nexus 
      owner: nexus 
      recurse: true

  - name: make {{nexus_dir}}/sonatype-work directory property of "nexus" user/group
    file: 
      path: "{{nexus_dir}}/sonatype-work"
      group: nexus 
      owner: nexus 
      recurse: true

  - name: make nexus runned by "nexus" user
    lineinfile: 
      dest: "{{nexus_dir}}/bin/nexus"
      regexp: "#RUN_AS_USER=" 
      line: "RUN_AS_USER=nexus" 
      backrefs: true

  - name: set NEXUS_HOME
    lineinfile: 
      dest: "{{nexus_dir}}/bin/nexus" 
      regexp: "^NEXUS_HOME" 
      line: "NEXUS_HOME={{nexus_dir}}" 
      backrefs: true

  - name: Copy nexus systemd unit file into place (for systemd systems)
    template:
      src: nexus.service.j2
      dest: "/etc/systemd/system/nexus.service"
    when:
      - ansible_service_mgr == "systemd"

  - name: register nexus instance to systemd
    template:
      src: nexus.service.j2
      dest: "/etc/systemd/system/{{nexus_name}}.service"
    when:
      - ansible_service_mgr == "systemd"

  - name: start nexus
    systemd: 
      name: nexus 
      state: started 
    when: ansible_service_mgr == "systemd" 
...

